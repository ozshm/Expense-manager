{"ast":null,"code":"var _jsxFileName = \"/Users/ozshmuel/Desktop/Google Drive/CS/\\u05E9\\u05E0\\u05D4 \\u05D2/\\u05E1\\u05DE\\u05E1\\u05D8\\u05E8 \\u05D1\\u05F3/\\u05E4\\u05D9\\u05EA\\u05D5\\u05D7 \\u05E9\\u05E8\\u05EA \\u05D0\\u05E1\\u05D9\\u05E0\\u05DB\\u05E8\\u05D5\\u05E0\\u05D9/project/react-app/src/pages/Report.js\",\n    _s = $RefreshSig$();\n\nimport Container from \"../components/Container\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Report = style => {\n  _s();\n\n  const [report, setReport] = useState({});\n  const [response, setResponse] = useState('');\n  const formProps = {\n    onSubmit: async e => {\n      e.preventDefault();\n      let res = await fetch(\"http://localhost:3000/costs/get?\" + new URLSearchParams(report), {\n        method: 'GET',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'\n        }\n      });\n      const resJson = await res.json();\n      setReport({ ...report,\n        body: resJson.body\n      });\n      setResponse(resJson);\n    },\n    fields: [{\n      label: 'User ID:',\n      inputType: 'number',\n      name: 'userId',\n      onChange: e => setReport({ ...report,\n        userId: e.target.value\n      })\n    }, {\n      label: 'Month:',\n      inputType: 'month',\n      name: 'monthAndYear',\n      onChange: e => setReport({ ...report,\n        monthAndYear: e.target.value\n      })\n    }],\n    button: {\n      value: 'Get Report'\n    },\n    response: response\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    title: \"Report\",\n    formProps: formProps,\n    report: report\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Report, \"cjEqknsXOyT4c4bSeP4PH2/5OYY=\");\n\n_c = Report;\nexport default Report;\n\nvar _c;\n\n$RefreshReg$(_c, \"Report\");","map":{"version":3,"names":["Container","useState","Report","style","report","setReport","response","setResponse","formProps","onSubmit","e","preventDefault","res","fetch","URLSearchParams","method","headers","resJson","json","body","fields","label","inputType","name","onChange","userId","target","value","monthAndYear","button"],"sources":["/Users/ozshmuel/Desktop/Google Drive/CS/שנה ג/סמסטר ב׳/פיתוח שרת אסינכרוני/project/react-app/src/pages/Report.js"],"sourcesContent":["import Container from \"../components/Container\";\nimport { useState } from \"react\";\n\nconst Report = (style) =>{\n\n    const [report, setReport] = useState({});\n    const [response, setResponse] = useState('');\n\n\n    const formProps = {\n        onSubmit: async (e) => {\n            e.preventDefault();\n            let res = await fetch(\"http://localhost:3000/costs/get?\" +\n             new URLSearchParams(report), {\n                method: 'GET',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8',\n                },\n                \n            })\n            const resJson = await res.json();\n            setReport({...report, body: resJson.body});\n            setResponse(resJson);\n\n        },\n        fields: [\n            {\n                label: 'User ID:',\n                inputType: 'number',\n                name: 'userId',\n                onChange: (e) => setReport({\n                    ...report,\n                    userId: e.target.value\n                }),\n            },\n            {\n                label: 'Month:',\n                inputType: 'month',\n                name: 'monthAndYear',\n                onChange: (e) => setReport({\n                    ...report,\n                    monthAndYear: e.target.value\n                }),\n            }\n        ],\n        button: {\n            value: 'Get Report'\n        },\n        response: response,\n    }\n\n\n    return (\n        <Container title='Report' formProps={formProps} report = {report}/>\n    )\n}\nexport default Report;\n"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,yBAAtB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAU;EAAA;;EAErB,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,EAAD,CAApC;EACA,MAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;EAGA,MAAMO,SAAS,GAAG;IACdC,QAAQ,EAAE,MAAOC,CAAP,IAAa;MACnBA,CAAC,CAACC,cAAF;MACA,IAAIC,GAAG,GAAG,MAAMC,KAAK,CAAC,qCACrB,IAAIC,eAAJ,CAAoBV,MAApB,CADoB,EACS;QAC1BW,MAAM,EAAE,KADkB;QAE1BC,OAAO,EAAE;UACL,UAAU,kBADL;UAEL,gBAAgB;QAFX;MAFiB,CADT,CAArB;MASA,MAAMC,OAAO,GAAG,MAAML,GAAG,CAACM,IAAJ,EAAtB;MACAb,SAAS,CAAC,EAAC,GAAGD,MAAJ;QAAYe,IAAI,EAAEF,OAAO,CAACE;MAA1B,CAAD,CAAT;MACAZ,WAAW,CAACU,OAAD,CAAX;IAEH,CAhBa;IAiBdG,MAAM,EAAE,CACJ;MACIC,KAAK,EAAE,UADX;MAEIC,SAAS,EAAE,QAFf;MAGIC,IAAI,EAAE,QAHV;MAIIC,QAAQ,EAAGd,CAAD,IAAOL,SAAS,CAAC,EACvB,GAAGD,MADoB;QAEvBqB,MAAM,EAAEf,CAAC,CAACgB,MAAF,CAASC;MAFM,CAAD;IAJ9B,CADI,EAUJ;MACIN,KAAK,EAAE,QADX;MAEIC,SAAS,EAAE,OAFf;MAGIC,IAAI,EAAE,cAHV;MAIIC,QAAQ,EAAGd,CAAD,IAAOL,SAAS,CAAC,EACvB,GAAGD,MADoB;QAEvBwB,YAAY,EAAElB,CAAC,CAACgB,MAAF,CAASC;MAFA,CAAD;IAJ9B,CAVI,CAjBM;IAqCdE,MAAM,EAAE;MACJF,KAAK,EAAE;IADH,CArCM;IAwCdrB,QAAQ,EAAEA;EAxCI,CAAlB;EA4CA,oBACI,QAAC,SAAD;IAAW,KAAK,EAAC,QAAjB;IAA0B,SAAS,EAAEE,SAArC;IAAgD,MAAM,EAAIJ;EAA1D;IAAA;IAAA;IAAA;EAAA,QADJ;AAGH,CArDD;;GAAMF,M;;KAAAA,M;AAsDN,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}